(function(t,e){typeof exports=="object"&&typeof module<"u"?e(exports):typeof define=="function"&&define.amd?define(["exports"],e):(t=typeof globalThis<"u"?globalThis:t||self,e(t.CopyToClipboard={}))})(this,function(t){"use strict";class e extends HTMLElement{constructor(){super(),this.handleClick=this.handleClick.bind(this)}connectedCallback(){this.addEventListener("click",this.handleClick)}disconnectedCallback(){this.removeEventListener("click",this.handleClick)}async handleClick(){const i=this==null?void 0:this.querySelector("template");if(i===null)return console.warn("The template tag is not found"),!1;const n=i==null?void 0:i.content.textContent;if(n){const o=this.hasAttribute("trim")?n==null?void 0:n.trim():n;navigator.clipboard.writeText(o).then(()=>{this.setAttribute("data-copy",""),this.dispatchCopyEvent()}).catch(s=>{this.hasAttribute("data-copy")&&this.removeAttribute("data-copy"),console.error(s.message)})}}dispatchCopyEvent(){const i=new CustomEvent("copytoclipboard:copy",{cancelable:!0});this.dispatchEvent(i)}}customElements.define("copyto-clipboard",e),t.CopyToClipboard=e,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
